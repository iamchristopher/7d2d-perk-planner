{"version":3,"sources":["store/modules/attributes.js","store/modules/localization.js","store/modules/perks.js","store/modules/selections.js","store/modules/skills.js","store/index.js","App.js","serviceWorker.js","index.js","util.js"],"names":["initialState","modules_attributes","state","arguments","length","undefined","modules_localization","modules_perks","completedTraderQuest","playerlevel","modules_selections","action","type","_state$action$attribu","attribute","currentLevel","Object","objectSpread","defineProperty","_state$action$attribu2","_state$action$perk","perk","_state$action$perk2","modules_skills","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","operators","GTE","a","b","requirementsMet","requirements","stats","name","_requirements$stats$c","nextLevelRequirements","requirement","Array","isArray","every","_ref","_ref$_attributes","_attributes","operation","value","toLowerCase","LevelIndicator","_ref2","_ref2$current","current","_ref2$max","max","_ref2$onDecrease","onDecrease","_ref2$onIncrease","onIncrease","_ref2$requirementsMet","react_default","createElement","Button_default","onClick","disabled","size","PerkLevelIndicator","withRouter","connect","_ref3","_ref4","attributes","perks","selections","skills","perkData","find","_ref5","skillData","_ref6","parent","attributeData","_ref7","progressionlevel","dispatch","_ref8","decrease","increase","stateProps","dispatchProps","ownProps","level_requirements","history","_ownProps$location","location","pathname","search","_qs$parse","qs","parse","substring","data","query","objectWithoutProperties","util","replace","stringify","_ownProps$location2","_qs$parse2","_ref9","_ref9$_attributes$max","max_level","App_LevelIndicator","PerkLevel","_ref10","_ref11","localization","level","_perks$find$effect_gr","_ref13","effect_group","effect_description","_perks$find$effect_gr2","_perks$find$effect_gr3","desc_key","description","_ref12","Key","English","_ref14","_ref14$currentLevel","_ref14$level","ListGroup_default","Item","Row_default","Col_default","xs","sm","md","lg","dangerouslySetInnerHTML","__html","Perk","_ref15","_ref17","_ref18","_ref19","name_key","_ref20","perkId","Card_default","Body","map","_","i","PerkList","skill","filter","_ref23","_ref24","_ref25","Skill","_ref26","_ref27","skillName","_ref28","_ref29","variant","SkillList","_ref33","_ref34","_ref35","Attribute","_ref36","attributeName","_ref38","_ref39","_ref40","_ownProps$location3","_qs$parse3","_ownProps$location4","_qs$parse4","_ref41","SkillTree","_ref42","_ref43","_ref43$_attributes","key","_ref44","_ref45","Tabs_default","Tab_default","eventKey","title","style","padding","BuildForm","_ref46","buildUrl","concat","href","_ref47","InputGroup_default","FormControl_default","Append","react_copy_to_clipboard_lib","text","_ref48","_ref48$selections","skillPointsUsed","values","reduce","total","toggleTraderQuestCompletion","_ref49","BrowserRouter","Navbar_default","bg","sticky","Brand","Collapse","className","checked","id","onChange","Boolean","hostname","match","progression","ReactDOM","render","es","store","createStore","combineReducers","applyMiddleware","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Buffer","__webpack_require__","d","__webpack_exports__","encode","decode","qs__WEBPACK_IMPORTED_MODULE_0__","qs__WEBPACK_IMPORTED_MODULE_0___default","n","defaultState","from","JSON","toString"],"mappings":"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","file":"static/js/main.9690ee24.chunk.js","sourcesContent":["const initialState = {};\n\nexport default function (state = initialState, action) {\n    return state;\n}\n","const initialState = {};\n\nexport default function (state = initialState, action) {\n    return state;\n}\n","const initialState = [];\n\nexport default function (state = initialState, action) {\n    return state;\n}\n","export const initialState = {\n    completedTraderQuest: true,\n    playerlevel: 300,\n};\n\nconst INCREASE_LEVEL = 'INCREASE_LEVEL';\n\nconst INCREASE_ATTRIBUTE = 'INCREASE_ATTRIBUTE';\n\nconst DECREASE_ATTRIBUTE = 'DECREASE_ATTRIBUTE';\n\nconst INCREASE_PERK = 'INCREASE_PERK';\n\nconst DECREASE_PERK = 'DECREASE_PERK';\n\nconst TOGGLE_TRADER_QUEST_COMPLETION = 'TOGGLE_TRADER_QUEST_COMPLETION';\n\nexport default function (state = initialState, action) {\n    if (action.type === INCREASE_ATTRIBUTE) {\n        const {\n            [action.attribute]: currentLevel = 0,\n        } = state;\n\n        return {\n            ...state,\n            [action.attribute]: currentLevel + 1,\n        };\n    }\n\n    if (action.type === DECREASE_ATTRIBUTE) {\n        const {\n            [action.attribute]: currentLevel = 0,\n        } = state;\n\n        return {\n            ...state,\n            [action.attribute]: currentLevel - 1,\n        };\n    }\n\n    if (action.type === INCREASE_PERK) {\n        const {\n            [action.perk]: currentLevel = 0,\n        } = state;\n\n        return {\n            ...state,\n            [action.perk]: currentLevel + 1,\n        };\n    }\n\n    if (action.type === DECREASE_PERK) {\n        const {\n            [action.perk]: currentLevel = 0,\n        } = state;\n\n        return {\n            ...state,\n            [action.perk]: currentLevel - 1,\n        };\n    }\n\n    if (action.type === TOGGLE_TRADER_QUEST_COMPLETION) {\n        return {\n            ...state,\n            completedTraderQuest: !state.completedTraderQuest,\n        };\n    }\n\n    return state;\n}\n\nexport const increaseLevel = () => ({\n    type: INCREASE_LEVEL,\n});\n\nexport const decreaseAttribute = attribute => ({\n    type: DECREASE_ATTRIBUTE,\n    attribute,\n});\n\nexport const increaseAttribute = attribute => ({\n    type: INCREASE_ATTRIBUTE,\n    attribute,\n});\n\nexport const increasePerk = perk => ({\n    type: INCREASE_PERK,\n    perk,\n});\n\nexport const decreasePerk = perk => ({\n    type: DECREASE_PERK,\n    perk,\n});\n\nexport const toggleTraderQuestCompletion = () => ({\n    type: TOGGLE_TRADER_QUEST_COMPLETION,\n});\n","const initialState = [];\n\nexport default function (state = initialState, action) {\n    return state;\n}\n","import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore,\n} from 'redux';\n\nimport attributes from './modules/attributes';\nimport localization from './modules/localization';\nimport perks from './modules/perks';\nimport selections from './modules/selections';\nimport skills from './modules/skills';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default (initialState = {}) => createStore(\n    combineReducers({\n        attributes,\n        localization,\n        perks,\n        selections,\n        skills,\n    }),\n    initialState,\n    composeEnhancers(\n        applyMiddleware(\n        ),\n    ),\n);\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport {\n    connect,\n} from 'react-redux';\nimport {\n    BrowserRouter,\n    withRouter,\n} from 'react-router-dom';\nimport qs from 'qs';\nimport {\n    CopyToClipboard\n} from 'react-copy-to-clipboard';\n\nimport * as selections from './store/modules/selections';\nimport * as util from './util';\n\nconst operators = {\n    GTE: (a, b) => a >= b,\n};\n\nfunction requirementsMet (requirements, stats, name) {\n    const {\n        [stats.currentLevel]: {\n            requirement: nextLevelRequirements,\n        } = {},\n    } = requirements;\n\n    if (!nextLevelRequirements) {\n        return false;\n    }\n\n    let req = Array.isArray(nextLevelRequirements) ? nextLevelRequirements : [ nextLevelRequirements ];\n\n    return req.every(({ _attributes: { name, operation, value } }) =>\n        operators[operation](\n            stats[name.toLowerCase()],\n            value\n        )\n    );\n}\n\nconst LevelIndicator = ({\n    current = 0,\n    max = '-',\n    onDecrease = () => {},\n    onIncrease = () => {},\n    requirementsMet = false,\n} = {}) =>\n    <div>\n        <Button onClick={onDecrease} disabled={current <= 0} size=\"sm\">-</Button>\n        &nbsp;{current} / {max}&nbsp;\n        <Button onClick={onIncrease} disabled={!requirementsMet || current >= max} size=\"sm\">+</Button>\n    </div>\n;\n\nconst PerkLevelIndicator = withRouter(connect(\n    (\n        {\n            attributes,\n            perks,\n            selections,\n            skills,\n        },\n        {\n            perk,\n        }\n    ) => {\n        const perkData = perks.find(({ _attributes: { name } }) => name === perk);\n        const skillData = skills.find(({ _attributes: { name } }) => name === perkData._attributes.parent);\n        const attributeData = attributes.find(({ _attributes: { name } }) => name === skillData._attributes.parent);\n\n        return {\n            ...perkData,\n            currentLevel: selections[perk] || 0,\n            playerlevel: selections.playerlevel,\n            progressionlevel: selections[attributeData._attributes.name] || 0,\n        };\n    },\n    (\n        dispatch,\n        {\n            perk,\n        },\n    ) => ({\n        decrease: () => dispatch(selections.decreasePerk(perk)),\n        increase: () => dispatch(selections.increasePerk(perk)),\n    }),\n    (\n        stateProps,\n        dispatchProps,\n        ownProps,\n    ) => ({\n        ...ownProps,\n        ...stateProps,\n        ...dispatchProps,\n        requirementsMet: requirementsMet(\n            stateProps.level_requirements,\n            {\n                currentLevel: stateProps.currentLevel,\n                playerlevel: stateProps.playerlevel,\n                progressionlevel: stateProps.progressionlevel,\n            },\n            ownProps.perk,\n        ),\n        decrease () {\n            dispatchProps.decrease();\n\n            const {\n                history,\n                location: {\n                    pathname,\n                    search,\n                },\n                perk,\n            } = ownProps;\n\n            const {\n                data,\n                ...query\n            } = qs.parse(search.substring(1));\n\n            const state = util.decode(data);\n\n            return history.replace({\n                pathname,\n                search: qs.stringify({\n                    ...query,\n                    data: util.encode({\n                        ...state,\n                        [perk]: stateProps.currentLevel - 1,\n                    }),\n                }),\n            });\n        },\n        increase () {\n            dispatchProps.increase();\n\n            const {\n                history,\n                location: {\n                    pathname,\n                    search,\n                },\n                perk,\n            } = ownProps;\n\n            const {\n                data,\n                ...query\n            } = qs.parse(search.substring(1));\n\n            const state = util.decode(data);\n\n            return history.replace({\n                pathname,\n                search: qs.stringify({\n                    ...query,\n                    data: util.encode({\n                        ...state,\n                        [perk]: stateProps.currentLevel + 1,\n                    }),\n                }),\n            });\n        },\n    })\n)(({\n    _attributes: {\n        max_level = 5,\n    },\n    currentLevel,\n    decrease,\n    increase,\n    requirementsMet,\n}) =>\n    <LevelIndicator\n        current={currentLevel}\n        max={max_level}\n        onDecrease={decrease}\n        onIncrease={increase}\n        requirementsMet={requirementsMet}\n    />\n));\n\nconst PerkLevel = connect(\n    (\n        {\n            localization,\n            perks,\n        },\n        {\n            level,\n            perk,\n        }\n    ) => {\n        const {\n            effect_group: {\n                effect_description: {\n                    [level]: {\n                        _attributes: {\n                            desc_key,\n                        } = {}\n                    } = {},\n                } = {},\n            },\n        } = perks.find(({ _attributes: { name } }) => name === perk);\n\n        let description = 'N/A';\n        if (desc_key) {\n            description = localization.find(({ Key }) => Key === desc_key).English\n                .replace('\\\\n', '<br />');\n        }\n\n        return {\n            description,\n            name: 'Level',\n        };\n    }\n)(({\n    currentLevel = 0,\n    description,\n    level = 0,\n    name,\n} = {}) =>\n    <ListGroup.Item>\n        <details>\n            <summary>\n                <Row>\n                    <Col>\n                        <b>{name} {level + 1}</b>\n                    </Col>\n                    <Col xs=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                        <div>{currentLevel - 1 >= level ? '' : 'Locked'}</div>\n                    </Col>\n                </Row>\n            </summary>\n            <span dangerouslySetInnerHTML={{ __html: description }}></span>\n        </details>\n    </ListGroup.Item>\n);\n\nconst Perk = connect(\n    (\n        {\n            perks,\n            localization,\n            selections,\n        } = {},\n        {\n            name: perk,\n        }\n    ) => {\n        const perkData = perks.find(({ _attributes: { name } }) => name === perk);\n        const description = localization.find(({ Key }) => Key === perkData._attributes.desc_key).English;\n        const name = localization.find(({ Key }) => Key === perkData._attributes.name_key).English;\n\n        return {\n            ...perkData,\n            currentLevel: selections[perk] || 0,\n            description,\n            name,\n        };\n    },\n)(({\n    _attributes: {\n        name: perkId,\n    },\n    currentLevel,\n    description,\n    level_requirements,\n    name,\n} = {}) => ([\n    <ListGroup.Item action>\n        <details>\n            <summary>\n                    <Row>\n                        <Col>\n                            {name}\n                        </Col>\n                        <Col xs=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                            <PerkLevelIndicator\n                                perk={perkId}\n                            />\n                        </Col>\n                    </Row>\n            </summary>\n            <Card.Body>\n                <p>{description}</p>\n                <ListGroup>\n                    {level_requirements.map((_, i) =>\n                        <PerkLevel\n                            perk={perkId}\n                            level={i}\n                        />\n                    )}\n                </ListGroup>\n            </Card.Body>\n        </details>\n    </ListGroup.Item>\n]));\n\nconst PerkList = connect(\n    (\n        {\n            perks,\n        } = {},\n        {\n            skill,\n        }\n    ) => ({\n        perks: perks\n            .filter(({ _attributes: { parent } }) => parent === skill)\n            .map(({ _attributes: { name } }) => name),\n    }),\n)(({ perks }) =>\n    perks.map(perk =>\n        <Perk name={perk} />\n    )\n);\n\nconst Skill = connect(\n    (\n        {\n            localization,\n            skills,\n        },\n        {\n            skill: skillName,\n        }\n    ) => {\n        const skillData = skills.find(({ _attributes: { name } }) => name === skillName);\n        const name = localization.find(({ Key }) => Key === skillData._attributes.name_key).English;\n\n        return {\n            name,\n        };\n    }\n)(({\n    name,\n} = {}) =>\n    <ListGroup.Item variant=\"secondary\">{name}</ListGroup.Item>\n);\n\nconst SkillList = connect(\n    (\n        {\n            skills,\n        } = {},\n        {\n            attribute,\n        }\n    ) => ({\n        skills: skills\n            .filter(({ _attributes: { parent } }) => parent === attribute)\n            .map(({ _attributes: { name } }) => name),\n    }),\n)(({ skills }) =>\n    skills.map(skill => ([\n        <Skill\n            skill={skill}\n        />,\n        <PerkList skill={skill} />\n    ]))\n);\n\nconst Attribute = withRouter(connect(\n    (\n        {\n            attributes,\n            localization,\n            selections,\n        } = {},\n        {\n            name: attributeName,\n        }\n    ) => {\n        const attributeData = attributes.find(({ _attributes: { name } }) => name === attributeName);\n        const name = localization.find(({ Key }) => Key === attributeData._attributes.name_key).English;\n\n        return {\n            ...attributeData,\n            currentLevel: selections[attributeName],\n            name,\n        };\n    },\n    (\n        dispatch,\n        {\n            name: attributeName,\n        }\n    ) => ({\n        decrease: () => dispatch(selections.decreaseAttribute(attributeName)),\n        increase: () => dispatch(selections.increaseAttribute(attributeName)),\n    }),\n    (\n        stateProps,\n        dispatchProps,\n        ownProps,\n    ) => ({\n        ...ownProps,\n        ...stateProps,\n        ...dispatchProps,\n        decrease () {\n            dispatchProps.decrease();\n\n            const {\n                history,\n                location: {\n                    pathname,\n                    search,\n                },\n                name,\n            } = ownProps;\n\n            const {\n                data,\n                ...query\n            } = qs.parse(search.substring(1));\n\n            const state = util.decode(data);\n\n            return history.replace({\n                pathname,\n                search: qs.stringify({\n                    ...query,\n                    data: util.encode({\n                        ...state,\n                        [name]: stateProps.currentLevel - 1,\n                    }),\n                }),\n            });\n        },\n        increase () {\n            dispatchProps.increase();\n\n            const {\n                history,\n                location: {\n                    pathname,\n                    search,\n                },\n                name,\n            } = ownProps;\n\n            const {\n                data,\n                ...query\n            } = qs.parse(search.substring(1));\n\n            const state = util.decode(data);\n\n            return history.replace({\n                pathname,\n                search: qs.stringify({\n                    ...query,\n                    data: util.encode({\n                        ...state,\n                        [name]: stateProps.currentLevel + 1,\n                    }),\n                }),\n            });\n        },\n    })\n)(({\n    currentLevel,\n    decrease,\n    increase,\n    level_requirements,\n    name,\n} = {}) =>\n    <ListGroup.Item variant=\"primary\">\n        <Row>\n            <Col>\n                <b>{name}</b>\n            </Col>\n            <Col xs=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                <LevelIndicator\n                    current={currentLevel}\n                    max={level_requirements.length}\n                    onDecrease={decrease}\n                    onIncrease={increase}\n                    requirementsMet={true}\n                />\n            </Col>\n        </Row>\n    </ListGroup.Item>\n));\n\nconst SkillTree = connect(\n    ({\n        attributes,\n        localization,\n    }) => ({\n        attributes: attributes\n            .map(({ _attributes: { name, name_key } }) => ({\n                key: name,\n                name: localization.find(({ Key }) => Key === name_key).English\n                    .replace('Attribute: ', '')\n            })),\n    }),\n)(({ attributes }) =>\n    <Tabs>\n        {attributes.map(attribute =>\n            <Tab eventKey={attribute.key} title={attribute.name} style={{ padding: 20 }}>\n                <ListGroup>\n                    <Attribute name={attribute.key} />\n                    <SkillList attribute={attribute.key} />\n                </ListGroup>\n            </Tab>\n        )}\n    </Tabs>\n);\n\nconst BuildForm = withRouter(connect(\n    ({\n        selections,\n    }) => ({\n        buildUrl: `${window.location.href}?data=${util.encode(selections)}`,\n    })\n)(({ buildUrl }) =>\n    <InputGroup size=\"sm\">\n        <FormControl value={buildUrl} />\n        <InputGroup.Append>\n            <CopyToClipboard text={buildUrl}>\n                <Button>Copy</Button>\n            </CopyToClipboard>\n        </InputGroup.Append>\n    </InputGroup>\n));\n\nexport default connect(\n    ({\n        selections: {\n            completedTraderQuest,\n            playerlevel,\n            ...selections\n        } = {},\n    }) => ({\n        completedTraderQuest,\n        playerlevel,\n        skillPointsUsed: Object.values(selections).reduce((total, i) => total += i, 0)\n    }),\n    dispatch => ({\n        toggleTraderQuestCompletion: () => dispatch(selections.toggleTraderQuestCompletion()),\n    })\n)(({\n    completedTraderQuest,\n    playerlevel,\n    skillPointsUsed,\n    toggleTraderQuestCompletion,\n} = {}) =>\n    <BrowserRouter>\n        <div>\n        <Navbar bg=\"light\" variant=\"light\" sticky=\"top\">\n            <Navbar.Brand>\n                7 Days to Die Perk Planner\n            </Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <BuildForm />\n            </Navbar.Collapse>\n        </Navbar>\n            <p>\n                Character level: {playerlevel}\n            </p>\n            <p>\n                Skill points used: {skillPointsUsed} / {1 * playerlevel + (completedTraderQuest ? 5 : 0)} <Button variant=\"link\">Respec</Button>\n            </p>\n        <p>\n\n            <input\n                checked={completedTraderQuest}\n                id=\"completedTraderQuest\"\n                onChange={toggleTraderQuestCompletion}\n                type=\"checkbox\"\n            /> Trader quest complete\n        </p>\n\n        <SkillTree />\n        </div>\n    </BrowserRouter>\n);\n\n/*\n\n                <Row>\n                    <Col>\n                        <img src=\"logo.png\" style={{\n                            height: 'auto',\n                            maxHeight: '100px',\n                            maxWidth: '90%'\n                        }} />\n                    </Col>\n                    <Col xs=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                        <InputGroup>\n                            <FormControl\n                                placeholder=\"http://localhost:3000/\"\n                            />\n                            <InputGroup.Append>\n                                <InputGroup.Text>Copy</InputGroup.Text>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Col>\n                </Row>\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    Provider,\n} from 'react-redux';\nimport qs from 'qs';\n\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as util from './util';\nimport localization from './localization.json';\nimport progression from './progression.json';\nimport {\n    initialState,\n} from './store/modules/selections';\n\n\nconst {\n    data: selections = util.encode(initialState),\n} = qs.parse(window.location.search.substring(1));\n\nconst {\n    progression: {\n        attributes: {\n            attribute: attributes,\n        },\n        perks: {\n            perk: perks,\n        },\n        skills: {\n            skill: skills,\n        }\n    }\n} = progression;\nconst state = {\n    attributes,\n    localization,\n    perks,\n    skills,\n    selections: util.decode(selections),\n};\n\nReactDOM.render(\n    <Provider store={store(state)}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import qs from 'qs';\n\nconst defaultState = {};\n\nexport const encode = (state = defaultState) =>\n    Buffer.from(\n        JSON.stringify(\n            qs.parse(\n                state\n            )\n        )\n    )\n        .toString('base64')\n;\n\nexport const decode = (state = encode(defaultState)) =>\n    JSON.parse(\n        Buffer.from(state, 'base64')\n            .toString()\n    )\n;\n"],"sourceRoot":""}